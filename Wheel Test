#define TL_MOT Serial5
#define TR_MOT Serial1
#define BL_MOT Serial3
#define BR_MOT Serial2

void setup() {
  
   // Top Left Motor
  TL_MOT.begin(19200);
  delay(5);
  TL_MOT.write(0xAA);
  TL_MOT.write(0x83);  // Exit Safe Start
  // Top Right Motor
  TR_MOT.begin(19200);
  delay(5);
  TR_MOT.write(0xAA);
  TR_MOT.write(0x83);  // Exit Safe Start
  // Bottom Left Motor
  BL_MOT.begin(19200);
  delay(5);
  BL_MOT.write(0xAA);
  BL_MOT.write(0x83);  // Exit Safe Start
  // Bottom Right Motor
  BR_MOT.begin(19200);
  delay(5);
  BR_MOT.write(0xAA);
  BR_MOT.write(0x83);  // Exit Safe Start

  
}

void loop() {
  // RAMP UP (Forward)
  for (int speed = 0; speed <= 3200; speed+=5) {
    moveAllMotors(speed);
    delay(20);  // 20 ms delay between steps (adjust for faster/slower ramp)
  }

  delay(1000);  // Hold at full speed briefly

  // RAMP DOWN (Backward)
  for (int speed = 3200; speed >= -3200; speed-=5) {
    moveAllMotors(speed);
    delay(20);  // Same delay for smooth reverse
  }

  delay(1000);  // Hold at full reverse briefly

}

void setMotorSpeed(int speed, Stream &port) {  // Port is passed as reference as to modify real object
  if (speed < 0) {
    port.write(0x86);  // motor reverse command
    speed = -speed;    // make speed positive
  } else {
    port.write(0x85);  // motor forward command
  }
  port.write(speed & 0x1F);
  port.write(speed >> 5 & 0x7F);
}

void moveAllMotors(int speed) {
  setMotorSpeed(speed, TL_MOT);
  setMotorSpeed(speed, TR_MOT);
  setMotorSpeed(speed, BL_MOT);
  setMotorSpeed(speed, BR_MOT);
}

void stopAllMotors() {
  setMotorSpeed(0, TL_MOT);
  setMotorSpeed(0, TR_MOT);
  setMotorSpeed(0, BL_MOT);
  setMotorSpeed(0, BR_MOT);
}
